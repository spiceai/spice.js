name: Create Tag for JS Package Version Bump

on:
  push:
    branches:
      - trunk
    paths:
      - 'package.json'

jobs:
  check-version:
    runs-on: ubuntu-latest
    
    outputs:
      version: ${{ steps.get-version.outputs.version }}
      tag-exists: ${{ steps.check-tag.outputs.exists }}

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Extract version from package.json
        id: get-version
        run: |
          VERSION=$(jq -r .version package.json)
          echo "Extracted version is $VERSION"
          echo "::set-output name=version::$VERSION"
          
      - name: Check if tag exists
        id: check-tag
        run: |
          if git tag | grep -q "v${{ steps.get-version.outputs.version }}"; then
            echo "Tag exists"
            echo "::set-output name=exists::1"
          else
            echo "Tag does not exist"
            echo "::set-output name=exists::0"
          fi

  create-tag-and-release:
    needs: check-version
    if: needs.check-version.outputs.tag-exists == '0'
    runs-on: ubuntu-latest
    
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Create and push tag
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          git tag v${{ needs.check-version.outputs.version }}
          git push origin v${{ needs.check-version.outputs.version }}

      - name: Install GitHub CLI
        run: |
          sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key C99B11DEB97541F0
          sudo apt-add-repository https://cli.github.com/packages
          sudo apt update
          sudo apt install gh

      - name: Draft a new release with autogenerated notes
        run: |
          gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}"
          gh release create v${{ needs.check-version.outputs.version }} --title "Release v${{ needs.check-version.outputs.version }}" --generate-notes --draft
